[{"id":"ea31912b.28d0f","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"880eac89.16813","type":"ui_button","z":"ea31912b.28d0f","name":"","group":"da5ab001.cbe88","order":2,"width":0,"height":0,"passthru":false,"label":"Send","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"send","topicType":"str","x":210,"y":260,"wires":[["edd11e33.d38fe"]]},{"id":"7c3f783c.84a9c8","type":"ui_text_input","z":"ea31912b.28d0f","name":"","label":"text","tooltip":"","group":"da5ab001.cbe88","order":3,"width":"0","height":"0","passthru":false,"mode":"text","delay":"0","topic":"text","topicType":"str","x":210,"y":180,"wires":[["edd11e33.d38fe"]]},{"id":"edd11e33.d38fe","type":"function","z":"ea31912b.28d0f","name":"text","func":"var data = context.get(\"data\") || 0;\n\nif(msg.topic === \"text\"){\n    data = msg.payload;\n    context.set(\"data\",data);\n    //if no output is needed while writting, stop the flow right here\n    return\n}\nif(msg.topic === \"send\"){\n    msg.payload = data;\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":240,"wires":[["f68d0da7.2b19f"]]},{"id":"3ee7ec63.e6b654","type":"mqtt out","z":"ea31912b.28d0f","name":"","topic":"","qos":"","retain":"","broker":"203e4215.27505e","x":770,"y":400,"wires":[]},{"id":"f68d0da7.2b19f","type":"function","z":"ea31912b.28d0f","name":"Command Seperator","func":"var text = msg.payload;\nvar currentCommand = \"\";\nvar script = [];\n\n//find the words in the line:\nfor (var i = 0; i < text.length; i++){\n    \n    // if it find a space, it will add the currentCurrent command to script  \n    if (text[i] == \" \"){\n        script.push(currentCommand);\n        currentCommand = \"\";\n    }\n    \n    else if (i == text.length - 1){\n        currentCommand += text[i];\n        script.push(currentCommand);\n        currentCommand = \"\";\n    }\n    // if no space is found, add the letter to the word.\n    else{\n        currentCommand += text[i];\n    }\n}\nvar msg1 = {payload: script};\nreturn msg1;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":620,"y":240,"wires":[["c6f7850f.b84838"]]},{"id":"cc5a464a.2db048","type":"inject","z":"ea31912b.28d0f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":220,"y":100,"wires":[["562aef60.c73cd"]]},{"id":"562aef60.c73cd","type":"function","z":"ea31912b.28d0f","name":"","func":"var commands = [\"circle\",\"square\",\"right\",\"left\",\"drawto\"];\nflow.set('commands',commands);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":100,"wires":[[]]},{"id":"c7ac2d4a.c03b6","type":"debug","z":"ea31912b.28d0f","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1030,"y":340,"wires":[]},{"id":"c6f7850f.b84838","type":"function","z":"ea31912b.28d0f","name":"","func":"var commands = flow.get('commands');\nvar codeToTest = msg.payload;\nvar failCount = 0;\nvar syntaxError = [];\n\nfor (i=0; i < codeToTest.length; i++){\n    for (k=0; k < commands.length; i++){\n        if (codeToTest[i] != commands[k] && failCount < 6){\n            \n        }\n        else if (failCount >= 6) {\n            syntaxError.push[i];\n        }\n    }\n}\n\nif (syntaxError.length < 1){\n    msg.payload = \"Error in lines:\";\n    return [[msg],[msg]];\n}\nelse {\n    return [[msg],[null]];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","x":820,"y":240,"wires":[["c7ac2d4a.c03b6"],["c7ac2d4a.c03b6","7011620a.36dabc"]]},{"id":"4c1f18ed.b80a78","type":"comment","z":"ea31912b.28d0f","name":"","info":"I want the code to check if the words are words that can be allowed to be used.\n\nI will be using a for loop to cycle trough the words used, and another for loop to cycle trough the words that can be used. This will crosscheck the words, and see if I have made a grammatical mistake, or used invalid numbers.\n\nIf one word is grammatical incorrect, the program should take note of which word was wrong, and send this out to the user.\n","x":830,"y":200,"wires":[]},{"id":"7011620a.36dabc","type":"ui_text","z":"ea31912b.28d0f","group":"da5ab001.cbe88","order":1,"width":0,"height":0,"name":"","label":"Status sender","format":"{{msg.payload}}","layout":"row-spread","x":1020,"y":160,"wires":[]},{"id":"da5ab001.cbe88","type":"ui_group","name":"Meniu Principal","tab":"a7edec63.9982f","order":1,"disp":false,"width":"12","collapse":false},{"id":"203e4215.27505e","type":"mqtt-broker","name":"","broker":"hairdresser.cloudmqtt.com","port":"15739","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a7edec63.9982f","type":"ui_tab","name":"USV","icon":"dashboard","order":1}]